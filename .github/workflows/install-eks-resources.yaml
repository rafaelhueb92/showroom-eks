name: Install EKS Cluster standard resources

on:
  workflow_run:
    workflows: ["Terraform Deploy Infrastructure"]
    types:
      - completed
env:
  ACTIONS_STEP_DEBUG: true
  AWS_DEBUG: true
  AWS_REGION: us-east-1

jobs:

  set-output:
    runs-on: ubuntu-latest
    outputs:
        cluster_name: ${{ steps.read-output.outputs.EKS_CLUSTER_NAME }}
        project_name: ${{ steps.read-output.outputs.PROJECT_NAME }}
        certificate_arn:  ${{ steps.read-output.outputs.CERTIFICATE_ARN }}
        role_arn:  ${{ steps.read-output.outputs.TF_VAR_ROLE_ARN }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: env-output
      - name: Read output
        id: read-output
        run: bash ./read-output.sh
        working-directory: ./bash 

  install-eks-resources:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          bash set-var-github-env.sh ${{ github.repository }} ${{ secrets.AWS_ACCOUNT_ID }}
        working-directory: ./bash 
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ needs.set-output.outputs.role_arn }}

      - name: Clear AWS Credentials Cache
        run: rm -rf ~/.aws/cli/cache
    
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: workflow-output
          path: output.txt

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ needs.set-output.outputs.cluster_name }} --region $AWS_REGION
        
      - name: Add Helm repositories
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: | 
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm repo update

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
         version: 'latest' 

      - name: Install ArgoCD using Helm and Run Helm test
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: bash ./bash/install-argocd.sh ${{ needs.set-output.outputs.certificate_arn }}

      - name: Install LoadBalancer Controller
        uses: WyriHaximus/github-action-helm3@v3
        with:
         exec: bash ./bash/install-lb-controller.sh ${{ needs.set-output.outputs.cluster_name }}
        
      - name: Create Ingress Resource for ArgoCD
        working-directory: ./bash 
        run: bash create-ingress-resource.sh \
             ${{ needs.set-output.outputs.certificate_arn }} \ 
             ${{ needs.set-output.outputs.project_name }}